;ALP PROGRAM TO CONVERT BCD TO BINARY VALUE 
DATA SEGMENT
    
    ;SINCE DECIMAL VALUES CAN HAVE 0 TO 9 NUMBERS ONLY 
    ;THEREFORE REMOVING BCE FROM THE REGISTRATION NUMBER 
    ;THAT IS 
    ;19BCE2088 TO 192088 , BREAKING INTO 8 BITS
    ;19H , 20H , 88H 
    
    BCD DB  19H , 20H , 88H   ;decimal hai 
    BIN DB ?                  ;hexadecimal hai              
    
    DATA ENDS

CODE SEGMENT
    ASSUME CS:CODE , DS:DATA
    
    START:
    
    MOV AX , DATA
    MOV DS , AX
    
    ;3 ELEMENT ARRAY (19H , 20H , 88H) SO CL = 3H
    MOV CL , 03H
    MOV SI , 0000H
    
    REPEAT:
    
    MOV AH , BCD + SI
    MOV BH , AH
    
    AND BH , 0FH  ;GET UN-PACKED BCD VALUE
    
    ;GET UN-PACKED BCD VALUE 
    ;[HOWEVER IN THIS CASE WE WILL GET THE RESULT AS X0H , WHERE X IS ANY NUMBER FROM 0 TO 9 ]
    ;SO WE WILL NEED TO RIGHT ROTATE THE VALUE TO GET THE DESIRED RESULT WHICH IS 0XH , X -> 0 TO 9
    AND AH , 0F0H 
    
    ;PERFORMING THE RIGHT ROTATION TO GET 0XH RESULT
    ROR AH , 04H                                    
    
    ;STORE 10 IN DECIMAL FORM IN DL , WE CAN ALSO USE 0AH INSTEAD OF 10 , WILL GIVE THE SAME RESULT
    
    MOV DL , 10
    
    ;STORE THE 10'S PLACE VALUE IN AL REGISTER TO MULTIPLY 
    ;BECAUSE BY DEFAULT THE MULTIPLICATION TAKES PLACE AS AX * [MEM] OR REGISTER 
    MOV AL , AH
    AND AX , 00FFH ;WE CAN ALSO SIMPLY GIVE AH = 00H VALUE 
    MUL DL ;PERFORM AL * DL MULTIPLCATION 
    ADD AL , BH ;ADD THE UNIT'S PLACE TO THE RESULTANT VALUE WHICH IS 0XH * 10 , WHERE X -> 0 TO 9
    
    
    MOV BIN  + SI, AL  ;INCREASE MEMORY ADDRESS TO STORE NEXT RESULT OBTAINED
    INC SI ;INCREASE SI TO STORE THE NEXT RESULT OF THE CONVERSION
    ;WHEN CX = 0H LOOP WILL TERMINATE
    LOOP REPEAT
    
    
    ;DOS INTERRUPT TO EXIT THE PROGRAM 
    MOV AH , 04CH
    INT 21H
    
    CODE ENDS
END START   